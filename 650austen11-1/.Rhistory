geom_line(data=df, aes(x=year, y=HR))+
geom_point_interactive(data=df,aes(x=year,y=HR,tooltip=HR,data_ID-year)
ggiraph(code=print(g),hover_css="fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=year, y=HR))+
geom_point_interactive(data=df,aes(x=year,y=HR,tooltip=HR,data_ID-year)
ggiraph(code=print(g),hover_css="fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=year, y=HR))+
geom_point_interactive(data=df,aes(x=year,y=HR,tooltip=HR,data_ID-year)
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
df
g<-ggplot()+
geom_line(data=df, aes(x=year, y=HR))
g<-ggplot()+
geom_line(data=df, aes(x=year, y=HR))+
geom_point_interactive(data=df,aes(x=year,y=HR,tooltip=HR,data_ID-year)
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=year, y=HR))+
geom_point_interactive(data=df,aes(x=year,y=HR,tooltip=HR,data_ID-year))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=year, y=HR))+
geom_point_interactive(data=df,aes(x=yearID,y=HR,tooltip=HR,data_ID-year))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=yearID, y=HR))+
geom_point_interactive(data=df,aes(x=yearID,y=HR,tooltip=HR,data_ID-year))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=yearID, y=HR))+
geom_point_interactive(data=df,aes(x=yearID,y=HR,tooltip=HR,data_id-year))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=yearID, y=HR))+
geom_point_interactive(data=df,aes(x=yearID,y=HR,tooltip=HR,data_id=year))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=yearID, y=HR))+
geom_point_interactive(data=df,aes(x=yearID,y=HR,tooltip=HR,data_id=yearID))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name)
class(df$name)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
df$name
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
# shows just the column "name"
#str adds structure   str(df$name)  class (df$name)
#factor
#factor added to name into variable makes df a factor (26 items)
#we need the levels to be the same as the columns
##-visualize data------
#stat-identity tells ggplot not to do any calculations
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
# shows just the column "name"
#str adds structure   str(df$name)  class (df$name)
#factor
#factor added to name into variable makes df a factor (26 items)
#we need the levels to be the same as the columns
##-visualize data------
#stat-identity tells ggplot not to do any calculations
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
ggiraph(code=print(g),hover_css="fill:red;stroke:black")
ggiraph(code=print(g),hover_css="fill:red;stroke:black")
ggiraph(code=print(g),hover_css="fill:green")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
# shows just the column "name"
#str adds structure   str(df$name)  class (df$name)
#factor
#factor added to name into variable makes df a factor (26 items)
#we need the levels to be the same as the columns
##-visualize data------
#stat-identity tells ggplot not to do any calculations
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=yearID, y=HR))+
geom_point_interactive(data=df,aes(x=yearID,y=HR,tooltip=HR,data_id=yearID))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
# shows just the column "name"
#str adds structure   str(df$name)  class (df$name)
#factor
#factor added to name into variable makes df a factor (26 items)
#we need the levels to be the same as the columns
##-visualize data------
#stat-identity tells ggplot not to do any calculations
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
# shows just the column "name"
#str adds structure   str(df$name)  class (df$name)
#factor
#factor added to name into variable makes df a factor (26 items)
#we need the levels to be the same as the columns
##-visualize data------
#stat-identity tells ggplot not to do any calculations
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
ggiraph(code=print(g),hover_cs="fill:white;stroke:red")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
#arrange from lowest too highest
df$name<-factor(df$name,levels=df$name)
# shows just the column "name"
#str adds structure   str(df$name)  class (df$name)
#factor
#factor added to name into variable makes df a factor (26 items)
#we need the levels to be the same as the columns
##-visualize data------
#stat-identity tells ggplot not to do any calculations
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
ggiraph(code=print(g),hover_css="fill:white;stroke:red")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR
df$name<-factor(df$name,levels=df$name)
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
ggiraph(code=print(g),hover_css="fill:white;stroke:red")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
ggiraph(code=print(g),hover_css="fill:white;stroke:red")
df<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,HR)
g<-ggplot()+
geom_line(data=df, aes(x=yearID, y=HR))+
geom_point_interactive(data=df,aes(x=yearID,y=HR,tooltip=HR,data_id=yearID))
ggiraph(code=print(g),hover_css = "fill:white;stroke:red")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df$name<-factor(df$name,levels=df$name)
#visualizing the data
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
ggiraph(code=print(g),hover_css="fill:red;stroke:black")
library(ggplot2)
library(ggiraph)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df$name<-factor(df$name,levels=df$name)
library(Lahman)
library(dplyr)
library(devtools)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df$name<-factor(df$name,levels=df$name)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df$name<-factor(df$name,levels=df$name)
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
ggiraph(code=print(g),hover_css="fill:red;stroke:black")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df$name<-factor(df$name,levels=df$name)
df$name
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
df$name<-factor(df$name,levels=df$name)
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR,data_id-name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
xlab("HOmeRuns")
ylab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR,data_id-name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
ylab("HOmeRuns")
xlab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR,data_id-name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
ylab("HOmeRuns")
xlab("Team Names")
ggiraph(code=print(g),hover_css="fill:red;stroke:black")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR,data_id-name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
ylab("HOmeRuns")+
xlab("Team Names")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR,tooltip=HR,data_id-name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Home Run Distribution")+
ylab("HOmeRuns")+
xlab("Team Names")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
g<-ggplot()+
geom_bar_interactive(data=df,aes(x=name,y=HR, tooltip=HR, data_id=name),stat="identity",color="blue",fill="white")+
coord_flip()+
ggtitle("1980 Team Homeruns")+
ylab("Homeruns")+
xlab("Team")
ggiraph(code=print(g),hover_css="fill:red;stroke:black")
library(flexdashboard)
library(Lahman)
library(dplyr)
library(ggplot2)
library(ggiraph)
result<-Batting%>%
filter(playerID=='ruthba01')%>%
select(yearID,SO,HR)
ggplot()+
geom_point(data=result,aes(x=SO,y=HR))+
xlab('strikeouts')+
ylab('Homeruns')
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages(c("backports", "curl", "dplyr", "officer", "purrr", "Rcpp", "rvg"))
install.packages("devtools")
library(devtools)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("flexdashboard")
library(flexdashboard)
open ~/Library/Logs/CrashReporter
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
gutenberg_works(title=='Dracula')
library(gutenbergr)
gutenberg_works(title=='Dracula')
?gutenbergr
gutenberg_works(title=='The Modern Prometheus')
gutenberg_works(title=='Frankenstein; or, The Modern Prometheus')
?gutenberg_work
?gutenberg_works
gutenberg_works(has_text=='Frankenstein')
gutenberg_works(title(has_text=='Frankenstein'))
gutenberg_works(has_text=='Frankenstein')
gutenberg_works(has_text=='Dracula')
gutenberg_works(author==str_extract(author,'Shelly,Mary'))
gutenberg_works(author==str_extract(author,'Shelley,Mary'))
gutenberg_works(author==str_extract(author,'Shelley, Mary'))
gutenberg_works(author=='Shelley, Mary')
gutenberg_works(author=='Shelley,Mary')
gutenberg_authors(author=='Shelley,Mary')
gutenberg_authors {gutenbergr}
gutenberg_works(str_detect(author, "Austen"))
gutenberg_subjects
gutenberg_works(str_detect(author, "Austen"))
library(stringr)
gutenberg_works(str_detect(author, "Austen"))
gutenberg_works(str_detect(author, "Shelley"))
gutenberg_works(str_detect(title, "Frankenstein"))
gutenberg_works(str_detect(title, 'Frankenstein'))
gutenberg_works(str_detect(title, 'Carrie'))
gutenberg_works(str_detect(author, "King, St"))
gutenberg_works(str_detect(author, "King"))
gutenberg_works(str_detect(title, 'CARRIE'))
gutenberg_works(str_detect(title, 'Carrie'))
me<-gutenberg_works(str_detect(title, 'Carrie'))
me
tail(me)
?guttenberg_works
wordcloud(words_wh$word,words_wh$count,min.freq=25)
library(dplyr)
library(tidytext)
library(stringr)
library(wordcloud)
library(gutenbergr)
library(knitr)
setwd("C:/Users/hbeezub/Desktop")
setwd("C:/Users/hbeezub/Desktop/austen")
pdflatex article
setwd("C:/Users/hbeezub/Desktop/austen")
setwd("C:/Users/hbeezub/Desktop/Data_colab")
sentiments
tail(sentiments)
get_dentiments('nrc')
get_sentiments('nrc')
get_sentiments('afin')
get_sentiments('nrc')
nrc<-get_sentiments('nrc')
rc%>%
filter(sentiment == 'fear')
nrc%>%
filter(sentiment == 'fear')
gytenberg_download(345)
gutenberg_download(345)
drac<-gutenberg_download(345)
head(drac)
drac%>%
unnest_tokens(word,text)
drac_words<-drac%>%
unnest_tokens(word,text)
drac_fear_words<-inner_join(nrc-fear,drac_words)
drac_fear_words<-inner_join(nrc_fear,drac_words)
nrc_fear<-nrc%>%
filter(sentiment == 'fear')
head(nrc_fear)
drac_words<-drac%>%
unnest_tokens(word,text)
head(drac_words)
drac_fear_words<-inner_join(nrc_fear,drac_words)
head(drac_fear_words)
drac_fear_words%>%
group_by(word)%>%
summarise(count=n())
drac_fear_freq<-drac_fear_words%>%
group_by(word)%>%
summarise(count=n())
wordcloud(drac_fear_freq$word,drac_fear_freq$count,min.freq=25)
wordcloud(drac_fear_freq$word,drac_fear_freq$count,min.freq=5)
unique(nrc$sentiments)
unique(nrc$sentiment)
setwd("C:/Users/hbeezub/Desktop")
setwd("C:/Users/hbeezub/Desktop/austen")
